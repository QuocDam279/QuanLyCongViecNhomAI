{
  "info": {
    "_postman_id": "d1d7b1a2-3f3e-4f3a-9b4c-collection-ai-team",
    "name": "AI Team Microservices (Auth, Group, Document)",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": "Auth → Group → Document end-to-end testing"
  },
  "item": [
    {
      "name": "Auth",
      "item": [
        {
          "name": "Login",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{email}}\",\n  \"password\": \"{{password}}\"\n}"
            },
            "url": {
              "raw": "{{AUTH_BASE}}/api/auth/login",
              "host": [ "{{AUTH_BASE}}" ],
              "path": [ "api", "auth", "login" ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Login returns token', function () {",
                  "  pm.response.to.have.status(200);",
                  "  const json = pm.response.json();",
                  "  pm.expect(json).to.have.property('token');",
                  "  pm.environment.set('token', json.token);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Group",
      "item": [
        {
          "name": "Create group",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"{{group_name}}\",\n  \"description\": \"{{group_description}}\"\n}"
            },
            "url": {
              "raw": "{{GROUP_BASE}}/api/groups",
              "host": [ "{{GROUP_BASE}}" ],
              "path": [ "api", "groups" ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Create group ok', function () {",
                  "  pm.response.to.have.status(201);",
                  "  const json = pm.response.json();",
                  "  pm.environment.set('groupId', json.group._id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Invite member",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userId\": \"{{member_userId}}\",\n  \"role\": \"member\"\n}"
            },
            "url": {
              "raw": "{{GROUP_BASE}}/api/groups/{{groupId}}/invite",
              "host": [ "{{GROUP_BASE}}" ],
              "path": [ "api", "groups", "{{groupId}}", "invite" ]
            }
          },
          "response": []
        },
        {
          "name": "List members",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "url": {
              "raw": "{{GROUP_BASE}}/api/groups/{{groupId}}/members",
              "host": [ "{{GROUP_BASE}}" ],
              "path": [ "api", "groups", "{{groupId}}", "members" ]
            }
          },
          "response": []
        },
        {
          "name": "Assign role",
          "request": {
            "method": "PATCH",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userId\": \"{{member_userId}}\",\n  \"role\": \"leader\"\n}"
            },
            "url": {
              "raw": "{{GROUP_BASE}}/api/groups/{{groupId}}/role",
              "host": [ "{{GROUP_BASE}}" ],
              "path": [ "api", "groups", "{{groupId}}", "role" ]
            }
          },
          "response": []
        },
        {
          "name": "Remove member",
          "request": {
            "method": "DELETE",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "url": {
              "raw": "{{GROUP_BASE}}/api/groups/{{groupId}}/members/{{member_userId}}",
              "host": [ "{{GROUP_BASE}}" ],
              "path": [ "api", "groups", "{{groupId}}", "members", "{{member_userId}}" ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Document",
      "item": [
        {
          "name": "Upload document (multipart/form-data)",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                { "key": "title", "value": "{{doc_title}}", "type": "text" },
                { "key": "groupId", "value": "{{groupId}}", "type": "text" },
                { "key": "file", "type": "file", "src": [] }
              ]
            },
            "url": {
              "raw": "{{DOC_BASE}}/api/documents/upload",
              "host": [ "{{DOC_BASE}}" ],
              "path": [ "api", "documents", "upload" ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Upload ok', function(){",
                  "  pm.response.to.have.status(201);",
                  "  const json = pm.response.json();",
                  "  pm.environment.set('documentId', json.document._id);",
                  "  if (json.document.filePath) pm.environment.set('doc_public_url', json.document.filePath);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Link document (external source)",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"{{doc_title}}\",\n  \"source\": \"google_drive\",\n  \"link\": \"https://drive.google.com/...\",\n  \"groupId\": \"{{groupId}}\"\n}"
            },
            "url": {
              "raw": "{{DOC_BASE}}/api/documents/link",
              "host": [ "{{DOC_BASE}}" ],
              "path": [ "api", "documents", "link" ]
            }
          },
          "response": []
        },
        {
          "name": "List documents by group",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "url": {
              "raw": "{{DOC_BASE}}/api/documents/group/{{groupId}}",
              "host": [ "{{DOC_BASE}}" ],
              "path": [ "api", "documents", "group", "{{groupId}}" ]
            }
          },
          "response": []
        },
        {
          "name": "Delete document",
          "request": {
            "method": "DELETE",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "url": {
              "raw": "{{DOC_BASE}}/api/documents/{{documentId}}",
              "host": [ "{{DOC_BASE}}" ],
              "path": [ "api", "documents", "{{documentId}}" ]
            }
          },
          "response": []
        }
      ]
    }
  ],
  "event": [],
  "variable": [
    { "key": "AUTH_BASE", "value": "http://localhost:5001" },
    { "key": "GROUP_BASE", "value": "http://localhost:5002" },
    { "key": "DOC_BASE", "value": "http://localhost:5003" },
    { "key": "email", "value": "leader@example.com" },
    { "key": "password", "value": "your_password" },
    { "key": "token", "value": "" },
    { "key": "groupId", "value": "" },
    { "key": "member_userId", "value": "" },
    { "key": "documentId", "value": "" },
    { "key": "doc_title", "value": "Báo cáo tuần" },
    { "key": "group_name", "value": "Nhóm 5 - Hệ thống thông tin" },
    { "key": "group_description", "value": "Nhóm làm đồ án AI" }
  ]
}